import cv2
import numpy as np
from PIL import Image
from pathlib import Path

input_imgs = '../test_img/poj_text/'

#https://stackoverflow.com/a/23672571/9721896

def main():
    cv2.namedWindow('res', cv2.WINDOW_NORMAL)
    for img_f in Path(input_imgs).glob('*.*'):
        img = cv2.imread(str(img_f), cv2.IMREAD_COLOR)
        rgb = cv2.pyrDown(img)
        small = cv2.cvtColor(rgb, cv2.COLOR_BGR2GRAY)

        kernel = cv2.getStructuringElement(cv2.MORPH_ELLIPSE, (3, 3))
        grad = cv2.morphologyEx(small, cv2.MORPH_GRADIENT, kernel)
        
        _, bw = cv2.threshold(
            grad, 0.0, 255.0, cv2.THRESH_BINARY | cv2.THRESH_OTSU)
        
        kernel = cv2.getStructuringElement(cv2.MORPH_RECT, (9, 1))
        connected = cv2.morphologyEx(bw, cv2.MORPH_CLOSE, kernel)
        # using RETR_EXTERNAL instead of RETR_CCOMP
        contours, hierarchy = cv2.findContours(
            connected.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_NONE)
        
        mask = np.zeros(bw.shape, dtype=np.uint8)
        
        for idx in range(len(contours)):
            x, y, w, h = cv2.boundingRect(contours[idx])
            mask[y:y+h, x:x+w] = 0
            cv2.drawContours(mask, contours, idx, (255, 255, 255), -1)
            r = float(cv2.countNonZero(mask[y:y+h, x:x+w])) / (w * h)
        
            if r > 0.45 and w > 8 and h > 8:
                cv2.rectangle(rgb, (x, y), (x+w-1, y+h-1), (0, 255, 0), 2)
        
        cv2.imshow('res', rgb)

        if cv2.waitKey(0) & 0xff == ord('q'):
            break

    cv2.destroyAllWindows()


if __name__=='__main__':
    main()
